// Copyright (c) Improbable Worlds Ltd, All Rights Reserved
// Note that this file has been generated automatically
package improbable.unreal.generated.testsuitecharacterbpc;

import "improbable/unreal/gdk/core_types.schema";

component TestSuiteCharacterBPCSingleClientRepData {
	id = 100185;
}
component TestSuiteCharacterBPCMultiClientRepData {
	id = 100186;
	bool field_bhidden0 = 1; // COND_None // ::Actor
	bool field_breplicatemovement0 = 2; // COND_None // ::Actor
	bool field_btearoff0 = 3; // COND_None // ::Actor
	bool field_bcanbedamaged0 = 4; // COND_None // ::Actor
	uint32 field_remoterole0 = 5; // COND_None // ::Actor
	bytes field_replicatedmovement0 = 6; // COND_SimulatedOrPhysicsNoReplay // ::Actor
	UnrealObjectRef field_attachmentreplication0_attachparent0 = 7; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	bytes field_attachmentreplication0_locationoffset0 = 8; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	bytes field_attachmentreplication0_relativescale3d0 = 9; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	bytes field_attachmentreplication0_rotationoffset0 = 10; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	string field_attachmentreplication0_attachsocket0 = 11; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	UnrealObjectRef field_attachmentreplication0_attachcomponent0 = 12; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	UnrealObjectRef field_owner0 = 13; // COND_None // ::Actor
	uint32 field_role0 = 14; // COND_None // ::Actor
	UnrealObjectRef field_instigator0 = 15; // COND_None // ::Actor
	UnrealObjectRef field_playerstate0 = 16; // COND_None // ::Pawn
	uint32 field_remoteviewpitch0 = 17; // COND_SkipOwner // ::Pawn
	UnrealObjectRef field_controller0 = 18; // COND_None // ::Pawn
	UnrealObjectRef field_replicatedbasedmovement0_movementbase0 = 19; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	string field_replicatedbasedmovement0_bonename0 = 20; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	bytes field_replicatedbasedmovement0_location0 = 21; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	bytes field_replicatedbasedmovement0_rotation0 = 22; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	bool field_replicatedbasedmovement0_bserverhasbasecomponent0 = 23; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	bool field_replicatedbasedmovement0_brelativerotation0 = 24; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	bool field_replicatedbasedmovement0_bserverhasvelocity0 = 25; // COND_SimulatedOnly // BasedMovementInfo::ReplicatedBasedMovement::Character
	float field_animrootmotiontranslationscale0 = 26; // COND_SimulatedOnly // ::Character
	float field_replicatedserverlasttransformupdatetimestamp0 = 27; // COND_SimulatedOnlyNoReplay // ::Character
	uint32 field_replicatedmovementmode0 = 28; // COND_SimulatedOnly // ::Character
	bool field_biscrouched0 = 29; // COND_SimulatedOnly // ::Character
	float field_jumpmaxholdtime0 = 30; // COND_None // ::Character
	int32 field_jumpmaxcount0 = 31; // COND_None // ::Character
	bool field_reprootmotion0_bisactive0 = 32; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	UnrealObjectRef field_reprootmotion0_animmontage0 = 33; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	float field_reprootmotion0_position0 = 34; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bytes field_reprootmotion0_location0 = 35; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bytes field_reprootmotion0_rotation0 = 36; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	UnrealObjectRef field_reprootmotion0_movementbase0 = 37; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	string field_reprootmotion0_movementbasebonename0 = 38; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bool field_reprootmotion0_brelativeposition0 = 39; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bool field_reprootmotion0_brelativerotation0 = 40; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bytes field_reprootmotion0_authoritativerootmotion0 = 41; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bytes field_reprootmotion0_acceleration0 = 42; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	bytes field_reprootmotion0_linearvelocity0 = 43; // COND_SimulatedOnlyNoReplay // RepRootMotionMontage::RepRootMotion::Character
	UnrealObjectRef field_testrunner0 = 44; // COND_InitialOnly // ::TestSuiteCharacter
}
component TestSuiteCharacterBPCHandoverData {
	id = 100187;
}
component TestSuiteCharacterBPCClientRPCs {
	id = 100188;
	command UnrealRPCCommandResponse rootmotiondebugclientprintonscreen(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientveryshortadjustposition(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientcheatwalk(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientcheatghost(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientcheatfly(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientadjustrootmotionsourceposition(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientadjustrootmotionposition(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientadjustposition(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse clientackgoodmove(UnrealRPCCommandRequest);
}
component TestSuiteCharacterBPCServerRPCs {
	id = 100189;
	command UnrealRPCCommandResponse serverstarttestrunner(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse servermoveold(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse servermovenobase(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse servermovedualnobase(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse servermovedualhybridrootmotion(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse servermovedual(UnrealRPCCommandRequest);
	command UnrealRPCCommandResponse servermove(UnrealRPCCommandRequest);
}
component TestSuiteCharacterBPCCrossServerRPCs {
	id = 100190;
}
component TestSuiteCharacterBPCNetMulticastRPCs {
	id = 100191;
}
