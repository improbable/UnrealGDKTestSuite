// Copyright (c) Improbable Worlds Ltd, All Rights Reserved
// Note that this file has been generated automatically
package improbable.unreal.generated;

import "improbable/unreal/gdk/core_types.schema";

component UnrealPlayerControllerSingleClientRepData {
	id = 100010;
	bytes field_targetviewrotation = 1; // COND_OwnerOnly // ::PlayerController
	bytes field_spawnlocation = 2; // COND_OwnerOnly // ::PlayerController
}
component UnrealPlayerControllerMultiClientRepData {
	id = 100011;
	bool field_bhidden = 1; // COND_None // ::Actor
	bool field_breplicatemovement = 2; // COND_None // ::Actor
	bool field_btearoff = 3; // COND_None // ::Actor
	bool field_bcanbedamaged = 4; // COND_None // ::Actor
	uint32 field_remoterole = 5; // COND_None // ::Actor
	bytes field_replicatedmovement = 6; // COND_SimulatedOrPhysics // ::Actor
	UnrealObjectRef field_attachmentreplication_attachparent = 7; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	bytes field_attachmentreplication_locationoffset = 8; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	bytes field_attachmentreplication_relativescale3d = 9; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	bytes field_attachmentreplication_rotationoffset = 10; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	string field_attachmentreplication_attachsocket = 11; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	UnrealObjectRef field_attachmentreplication_attachcomponent = 12; // COND_Custom // RepAttachment::AttachmentReplication::Actor
	UnrealObjectRef field_owner = 13; // COND_None // ::Actor
	uint32 field_role = 14; // COND_None // ::Actor
	UnrealObjectRef field_instigator = 15; // COND_None // ::Actor
	UnrealObjectRef field_playerstate = 16; // COND_None // ::Controller
	UnrealObjectRef field_pawn = 17; // COND_None // ::Controller
}
component UnrealPlayerControllerMigratableData {
	id = 100012;
	UnrealObjectRef field_acknowledgedpawn = 1;
}
import "improbable/unreal/generated/UnrealPlayerControllerTypes.schema";
import "improbable/unreal/generated/UnrealControllerTypes.schema";

component UnrealPlayerControllerClientRPCs {
	id = 100013;
	command UnrealRPCCommandResponse playercontrolleronserverstartedvisuallogger(UnrealOnServerStartedVisualLoggerRequest);
	command UnrealRPCCommandResponse playercontrollerclientwaskicked(UnrealClientWasKickedRequest);
	command UnrealRPCCommandResponse playercontrollerclientvoicehandshakecomplete(UnrealClientVoiceHandshakeCompleteRequest);
	command UnrealRPCCommandResponse playercontrollerclientupdatemultiplelevelsstreamingstatus(UnrealClientUpdateMultipleLevelsStreamingStatusRequest);
	command UnrealRPCCommandResponse playercontrollerclientupdatelevelstreamingstatus(UnrealClientUpdateLevelStreamingStatusRequest);
	command UnrealRPCCommandResponse playercontrollerclientunmuteplayer(UnrealClientUnmutePlayerRequest);
	command UnrealRPCCommandResponse playercontrollerclienttravelinternal(UnrealClientTravelInternalRequest);
	command UnrealRPCCommandResponse playercontrollerclientteammessage(UnrealClientTeamMessageRequest);
	command UnrealRPCCommandResponse playercontrollerclientstopforcefeedback(UnrealClientStopForceFeedbackRequest);
	command UnrealRPCCommandResponse playercontrollerclientstopcamerashake(UnrealClientStopCameraShakeRequest);
	command UnrealRPCCommandResponse playercontrollerclientstopcameraanim(UnrealClientStopCameraAnimRequest);
	command UnrealRPCCommandResponse playercontrollerclientstartonlinesession(UnrealClientStartOnlineSessionRequest);
	command UnrealRPCCommandResponse playercontrollerclientspawncameralenseffect(UnrealClientSpawnCameraLensEffectRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetviewtarget(UnrealClientSetViewTargetRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetspectatorwaiting(UnrealClientSetSpectatorWaitingRequest);
	command UnrealRPCCommandResponse playercontrollerclientsethud(UnrealClientSetHUDRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetforcemiplevelstoberesident(UnrealClientSetForceMipLevelsToBeResidentRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetcinematicmode(UnrealClientSetCinematicModeRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetcameramode(UnrealClientSetCameraModeRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetcamerafade(UnrealClientSetCameraFadeRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetblockonasyncloading(UnrealClientSetBlockOnAsyncLoadingRequest);
	command UnrealRPCCommandResponse playercontrollerclientreturntomainmenuwithtextreason(UnrealClientReturnToMainMenuWithTextReasonRequest);
	command UnrealRPCCommandResponse playercontrollerclientreturntomainmenu(UnrealClientReturnToMainMenuRequest);
	command UnrealRPCCommandResponse playercontrollerclientretryclientrestart(UnrealClientRetryClientRestartRequest);
	command UnrealRPCCommandResponse playercontrollerclientrestart(UnrealClientRestartRequest);
	command UnrealRPCCommandResponse playercontrollerclientreset(UnrealClientResetRequest);
	command UnrealRPCCommandResponse playercontrollerclientrepobjref(UnrealClientRepObjRefRequest);
	command UnrealRPCCommandResponse playercontrollerclientreceivelocalizedmessage(UnrealClientReceiveLocalizedMessageRequest);
	command UnrealRPCCommandResponse playercontrollerclientprestreamtextures(UnrealClientPrestreamTexturesRequest);
	command UnrealRPCCommandResponse playercontrollerclientpreparemapchange(UnrealClientPrepareMapChangeRequest);
	command UnrealRPCCommandResponse playercontrollerclientplaysoundatlocation(UnrealClientPlaySoundAtLocationRequest);
	command UnrealRPCCommandResponse playercontrollerclientplaysound(UnrealClientPlaySoundRequest);
	command UnrealRPCCommandResponse playercontrollerclientplayforcefeedback(UnrealClientPlayForceFeedbackRequest);
	command UnrealRPCCommandResponse playercontrollerclientplaycamerashake(UnrealClientPlayCameraShakeRequest);
	command UnrealRPCCommandResponse playercontrollerclientplaycameraanim(UnrealClientPlayCameraAnimRequest);
	command UnrealRPCCommandResponse playercontrollerclientmuteplayer(UnrealClientMutePlayerRequest);
	command UnrealRPCCommandResponse playercontrollerclientmessage(UnrealClientMessageRequest);
	command UnrealRPCCommandResponse playercontrollerclientignoremoveinput(UnrealClientIgnoreMoveInputRequest);
	command UnrealRPCCommandResponse playercontrollerclientignorelookinput(UnrealClientIgnoreLookInputRequest);
	command UnrealRPCCommandResponse playercontrollerclientgotostate(UnrealClientGotoStateRequest);
	command UnrealRPCCommandResponse playercontrollerclientgameended(UnrealClientGameEndedRequest);
	command UnrealRPCCommandResponse playercontrollerclientforcegarbagecollection(UnrealClientForceGarbageCollectionRequest);
	command UnrealRPCCommandResponse playercontrollerclientflushlevelstreaming(UnrealClientFlushLevelStreamingRequest);
	command UnrealRPCCommandResponse playercontrollerclientendonlinesession(UnrealClientEndOnlineSessionRequest);
	command UnrealRPCCommandResponse playercontrollerclientenablenetworkvoice(UnrealClientEnableNetworkVoiceRequest);
	command UnrealRPCCommandResponse playercontrollerclientcommitmapchange(UnrealClientCommitMapChangeRequest);
	command UnrealRPCCommandResponse playercontrollerclientclearcameralenseffects(UnrealClientClearCameraLensEffectsRequest);
	command UnrealRPCCommandResponse playercontrollerclientcapbandwidth(UnrealClientCapBandwidthRequest);
	command UnrealRPCCommandResponse playercontrollerclientcancelpendingmapchange(UnrealClientCancelPendingMapChangeRequest);
	command UnrealRPCCommandResponse playercontrollerclientaddtexturestreamingloc(UnrealClientAddTextureStreamingLocRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetrotation(UnrealClientSetRotationRequest);
	command UnrealRPCCommandResponse playercontrollerclientsetlocation(UnrealClientSetLocationRequest);
}
component UnrealPlayerControllerServerRPCs {
	id = 100014;
	command UnrealRPCCommandResponse playercontrollerserverviewself(UnrealServerViewSelfRequest);
	command UnrealRPCCommandResponse playercontrollerserverviewprevplayer(UnrealServerViewPrevPlayerRequest);
	command UnrealRPCCommandResponse playercontrollerserverviewnextplayer(UnrealServerViewNextPlayerRequest);
	command UnrealRPCCommandResponse playercontrollerserververifyviewtarget(UnrealServerVerifyViewTargetRequest);
	command UnrealRPCCommandResponse playercontrollerserverupdatemultiplelevelsvisibility(UnrealServerUpdateMultipleLevelsVisibilityRequest);
	command UnrealRPCCommandResponse playercontrollerserverupdatelevelvisibility(UnrealServerUpdateLevelVisibilityRequest);
	command UnrealRPCCommandResponse playercontrollerserverupdatecamera(UnrealServerUpdateCameraRequest);
	command UnrealRPCCommandResponse playercontrollerserverunmuteplayer(UnrealServerUnmutePlayerRequest);
	command UnrealRPCCommandResponse playercontrollerservertoggleailogging(UnrealServerToggleAILoggingRequest);
	command UnrealRPCCommandResponse playercontrollerservershorttimeout(UnrealServerShortTimeoutRequest);
	command UnrealRPCCommandResponse playercontrollerserversetspectatorwaiting(UnrealServerSetSpectatorWaitingRequest);
	command UnrealRPCCommandResponse playercontrollerserversetspectatorlocation(UnrealServerSetSpectatorLocationRequest);
	command UnrealRPCCommandResponse playercontrollerserverrestartplayer(UnrealServerRestartPlayerRequest);
	command UnrealRPCCommandResponse playercontrollerserverpause(UnrealServerPauseRequest);
	command UnrealRPCCommandResponse playercontrollerservernotifyloadedworld(UnrealServerNotifyLoadedWorldRequest);
	command UnrealRPCCommandResponse playercontrollerservermuteplayer(UnrealServerMutePlayerRequest);
	command UnrealRPCCommandResponse playercontrollerservercheckclientpossessionreliable(UnrealServerCheckClientPossessionReliableRequest);
	command UnrealRPCCommandResponse playercontrollerservercheckclientpossession(UnrealServerCheckClientPossessionRequest);
	command UnrealRPCCommandResponse playercontrollerserverchangename(UnrealServerChangeNameRequest);
	command UnrealRPCCommandResponse playercontrollerservercamera(UnrealServerCameraRequest);
	command UnrealRPCCommandResponse playercontrollerserveracknowledgepossession(UnrealServerAcknowledgePossessionRequest);
}
component UnrealPlayerControllerNetMulticastRPCs {
	id = 100015;
}
